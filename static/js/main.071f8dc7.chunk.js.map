{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","index.js"],"names":["Card","props","className","alt","src","id","name","email","CardList","robots","map","user","i","SearchBox","searchField","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","Component","ReactDOM","render","document","getElementById"],"mappings":"kOAYeA,EAXF,SAACC,GACV,OAEI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAAMI,GAAhC,cACrB,6BAAKJ,EAAMK,OACX,4BAAIL,EAAMM,YCkBPC,EArBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACf,OACI,8BAEQA,EAAOC,KAAI,SAACC,EAAMC,GAClB,OACA,cAAC,EAAD,CAEAN,KAAMG,EAAOG,GAAGN,KAChBC,MAAOE,EAAOG,GAAGL,MACjBF,GAAII,EAAOG,GAAGP,IAHTO,SCINC,EAbG,SAAC,GAAiC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC9B,OAEI,qBAAKb,UAAU,MAAf,SACI,uBAAOA,UAAU,mCACjBc,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCPI,EARA,SAAClB,GACZ,OACI,qBAAKmB,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAtE,SACKtB,EAAMuB,YC6CJC,G,wDA1CX,aAAe,IAAD,8BACV,gBAaJC,eAAiB,SAACC,GAGd,EAAKC,SAAS,CAAEd,YAAaa,EAAME,OAAOC,SAf1C,EAAKC,MAAQ,CACTtB,OAAQ,GACRK,YAAa,IAJP,E,qDAQd,WAAqB,IAAD,OAChBkB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKR,SAAS,CAACnB,OAAQ2B,S,oBAS1C,WACI,MAA+BC,KAAKN,MAA5BtB,EAAR,EAAQA,OAAQK,EAAhB,EAAgBA,YACVwB,EAAiB7B,EAAO8B,QAAO,SAAAC,GACjC,OAAOA,EAAMlC,KAAKmC,cAAcC,SAAS5B,EAAY2B,kBAGzD,OAAQhC,EAAOkC,OAGX,sBAAKzC,UAAU,KAAf,UACQ,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWa,aAAcsB,KAAKX,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,CAAUjB,OAAQ6B,SAPZ,6C,GA5BZM,c,MCAlBC,IAASC,OAEH,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.071f8dc7.chunk.js","sourcesContent":["import React from 'react';\r\nconst Card = (props) => {\r\n    return (\r\n        \r\n        <div className='bg-light-green dib br3 pa3 ma2 grow tc bw2 shadow-5'>\r\n            <img alt='robots' src={`https://robohash.org/${props.id}?100x100`} />\r\n            <h2>{props.name}</h2>\r\n            <p>{props.email}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","\r\nimport React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n    return (\r\n        <div>\r\n            {\r\n                robots.map((user, i) => {\r\n                return (\r\n                <Card \r\n                key={i} \r\n                name={robots[i].name} \r\n                email={robots[i].email} \r\n                id={robots[i].id}/>\r\n                );\r\n                }\r\n\r\n                )\r\n            }\r\n        </div> \r\n\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchField, searchChange}) => {\r\n    return (\r\n        \r\n        <div className='pa2'>\r\n            <input className='pa3 ba b--green bg-lightest-blue' \r\n            type='search' \r\n            placeholder='search robots' \r\n            onChange={searchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{ overflowY: 'scroll', border: '5px solid black', height: '800px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            robots: [],\r\n            searchField: '',\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(users => this.setState({robots: users}));\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        \r\n\r\n        this.setState({ searchField: event.target.value });\r\n    }\r\n\r\n    render() {\r\n        const { robots, searchField} = this.state;\r\n        const filteredRobots = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n        });\r\n        \r\n        return !robots.length?<h1>Loading</h1>: (\r\n\r\n\r\n            <div className='tc'>\r\n                    <h1 className='f2'>RoboFriends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange}/>\r\n                    <Scroll>\r\n                        <CardList robots={filteredRobots} />\r\n                    </Scroll>\r\n                </div>\r\n        );      \r\n    }\r\n    \r\n}\r\n\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport 'tachyons';\n\nReactDOM.render(\n  \n      <App />,document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}